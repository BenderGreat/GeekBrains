# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа. Числа и знак операции вводятся пользователем.
# После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений.
# Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
# Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.
"""
# Функция запрос оператора
def get_operator():
    op = str(input('Введите оператор (+, -, *, /, 0 - выход из программы )) : ')).strip()
    if op in '+*-0/':
        return op
    print(f'Вы ввели не верный оператор\n Попробуйте еще раз!')
    get_operator()


# Функция оператор
def operator(n1, n2, op):
    if op == '+':
        n3 = n1 + n2
    elif op == '*':
        n3 = n1 * n2
    elif op == '-':
        n3 = n1 + n2
    elif op == '/':
        if n2 == 0:
            print(f'Вы ввели 0 в качестве делителя\nПопробуйте еще раз!')
            n3 = False
        else:
            n3 = n1 / n2
    else:
        n3 = False

    return n3


# Функция старта калькулятора
def start_calc():
    stop = False
    while stop != True:
        n1 = int(input('\nВведите целое число X : '))
        n2 = int(input('Введите целое число Y : '))

        op = get_operator()

        if op == '0':
            break

        n3 = operator(n1, n2, op)

        if not n3:
            continue
        else:
            print(f'\nРезультат :')
            print(f'X = {n1} Y = {n2} Оператор = {op}')
            print(f'{n1} {op} {n2} = {n3}')
    pass


# Зануск калькулятора

start_calc()

print(f'\nBye!')
"""

# 2. Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).

"""
def is_even_num(e_num):
    return False if int(e_num) % 2 else True

in_num = input('Введите целое число\n>>>').strip()
sum_even_num = sum_no_even = 0
for var in in_num:
    if is_even_num(var):
        sum_even_num += 1
    else:
        sum_no_even += 1

print(f'В числе {in_num}\nЧетных - {sum_even_num}\nНечетных - {sum_no_even}')
"""

# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. Например, если введено число 3486, то надо вывести число 6843.
"""
def reverse(s):
    if len(s) > 1:
        s = s[-1] + reverse(s[:len(s) - 1])
    return s


input_num = input('Введите целое число\n>>>').strip()

print(f'Исходное число {input_num}, реверс числа {reverse(input_num)}')
"""

# 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры.

"""
def sum_row(n_row,n_var):
    if n_var > 1:
        s = float(n_row.split()[n_var - 1]) + float(sum_row(n_row,(n_var - 1)))
    else:
        s = float(n_row.split()[n_var - 1])
    return s


n = int(input('Введите число начиная с первого суммируемых элементов ряда 1 -0.5 0.25 -0.125\n>>>').strip())

row = '1 -0.5 0.25 -0.125'

print(f'Сумма первых n = {n} чисел последовательности ({row}) = {sum_row(row,n)}')
"""

# 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно. Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

"""
i = 0
line = str()
for code in range(37, 127):
    cel = str(code) + " - " + str(chr(code))
    if len(cel) < 8:
        cel += " " * (8 - len(cel))
    line += cel + " | "
    i += 1
    if i == 10:
        print("-" * len(line))
        print(f'{line}')
        i = 0
        line = str()
"""

# 6. В программе генерируется случайное целое число от 0 до 100. Пользователь должен его отгадать не более чем за 10 попыток. После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число, чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.
"""
import random

rnd_num = random.randint(0, 100)

print('Угадайте случайное число от 0 до 100')

n = 10
while n > 0:
    n -= 1
    input_num = int(input('Введите число от 0 до 100\n>>>'))
    if input_num == rnd_num:
        print(f'Вы угадали загаданное число')
        break
    elif input_num > rnd_num:
        print(f'Загаданное число < вашего числа\nПопробуйте еще раз\nУ Вас {n} попыток\n')
    elif input_num < rnd_num:
        print(f'Загаданное число > вашего числа\nПопробуйте еще раз\nУ Вас {n} попыток\n')

print(f'Загаданное число = {rnd_num}')
"""

# 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство: 1+2+...+n = n(n+1)/2, где n - любое натуральное число.
# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. Вывести на экран это число и сумму его цифр.
# Примечание:
# 1. Постарайтесь решить задачи без использования массивов. Им будет посвящён следующий урок.
